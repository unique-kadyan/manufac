{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\Documents\\\\Assignment\\\\assignment\\\\src\\\\components\\\\GammaStatistics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GammaStatistics = _ref => {\n  _s();\n  let {\n    dataset\n  } = _ref;\n  const [classWiseStats, setClassWiseStats] = useState({});\n  useEffect(() => {\n    calculateGammaStatistics();\n  }, []);\n  const calculateGammaStatistics = () => {\n    const classList = Array.from(new Set(dataset.map(dataPoint => dataPoint.Class)));\n    const classWiseStats = {};\n    classList.forEach(className => {\n      const classData = dataset.filter(dataPoint => dataPoint.Class === className);\n      const gammas = classData.map(dataPoint => dataPoint.Ash * dataPoint.Hue / dataPoint.Magnesium);\n\n      // Calculate mean\n      const mean = gammas.reduce((sum, gamma) => sum + gamma, 0) / gammas.length;\n\n      // Calculate median\n      const sortedGammas = gammas.sort((a, b) => a - b);\n      const median = sortedGammas[Math.floor(sortedGammas.length / 2)];\n\n      // Calculate mode\n      const mode = calculateMode(gammas);\n      classWiseStats[className] = {\n        mean: mean.toFixed(3),\n        median: median.toFixed(3),\n        mode: mode.toFixed(3)\n      };\n    });\n    setClassWiseStats(classWiseStats);\n  };\n  const calculateMode = arr => {\n    const frequencyMap = {};\n    let maxFrequency = 0;\n    let mode = null;\n    arr.forEach(value => {\n      frequencyMap[value] = frequencyMap[value] ? frequencyMap[value] + 1 : 1;\n      if (frequencyMap[value] > maxFrequency) {\n        maxFrequency = frequencyMap[value];\n        mode = value;\n      }\n    });\n    return mode;\n  };\n  const renderTable = () => {\n    const classList = Object.keys(classWiseStats);\n    const measureList = ['Gamma', 'Mean', 'Median', 'Mode'];\n\n    // Prepare table rows\n    const rows = measureList.map(measure => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: measure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), classList.map(className => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: classWiseStats[className][measure.toLowerCase()]\n      }, className, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, measure, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n\n    // Return the table component\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Measure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), classList.map(className => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Class \", className]\n          }, className, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_s(GammaStatistics, \"2zLe+fxz/dMSi1asikh3PwNo9t8=\");\n_c = GammaStatistics;\nexport default GammaStatistics;\nvar _c;\n$RefreshReg$(_c, \"GammaStatistics\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GammaStatistics","_ref","_s","dataset","classWiseStats","setClassWiseStats","calculateGammaStatistics","classList","Array","from","Set","map","dataPoint","Class","forEach","className","classData","filter","gammas","Ash","Hue","Magnesium","mean","reduce","sum","gamma","length","sortedGammas","sort","a","b","median","Math","floor","mode","calculateMode","toFixed","arr","frequencyMap","maxFrequency","value","renderTable","Object","keys","measureList","rows","measure","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/rajes/Documents/Assignment/assignment/src/components/GammaStatistics.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst GammaStatistics = ({ dataset }) => {\r\n  const [classWiseStats, setClassWiseStats] = useState({});\r\n\r\n  useEffect(() => {\r\n    calculateGammaStatistics();\r\n  }, []);\r\n\r\n  const calculateGammaStatistics = () => {\r\n    const classList = Array.from(new Set(dataset.map(dataPoint => dataPoint.Class)));\r\n    const classWiseStats = {};\r\n\r\n    classList.forEach(className => {\r\n      const classData = dataset.filter(dataPoint => dataPoint.Class === className);\r\n\r\n      const gammas = classData.map(dataPoint => (dataPoint.Ash * dataPoint.Hue) / dataPoint.Magnesium);\r\n\r\n      // Calculate mean\r\n      const mean = gammas.reduce((sum, gamma) => sum + gamma, 0) / gammas.length;\r\n\r\n      // Calculate median\r\n      const sortedGammas = gammas.sort((a, b) => a - b);\r\n      const median = sortedGammas[Math.floor(sortedGammas.length / 2)];\r\n\r\n      // Calculate mode\r\n      const mode = calculateMode(gammas);\r\n\r\n      classWiseStats[className] = {\r\n        mean: mean.toFixed(3),\r\n        median: median.toFixed(3),\r\n        mode: mode.toFixed(3),\r\n      };\r\n    });\r\n\r\n    setClassWiseStats(classWiseStats);\r\n  };\r\n\r\n  const calculateMode = arr => {\r\n    const frequencyMap = {};\r\n    let maxFrequency = 0;\r\n    let mode = null;\r\n\r\n    arr.forEach(value => {\r\n      frequencyMap[value] = frequencyMap[value] ? frequencyMap[value] + 1 : 1;\r\n      if (frequencyMap[value] > maxFrequency) {\r\n        maxFrequency = frequencyMap[value];\r\n        mode = value;\r\n      }\r\n    });\r\n\r\n    return mode;\r\n  };\r\n\r\n  const renderTable = () => {\r\n    const classList = Object.keys(classWiseStats);\r\n    const measureList = ['Gamma', 'Mean', 'Median', 'Mode'];\r\n\r\n    // Prepare table rows\r\n    const rows = measureList.map(measure => (\r\n      <tr key={measure}>\r\n        <td>{measure}</td>\r\n        {classList.map(className => (\r\n          <td key={className}>{classWiseStats[className][measure.toLowerCase()]}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n\r\n    // Return the table component\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Measure</th>\r\n            {classList.map(className => (\r\n              <th key={className}>Class {className}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return <div>{renderTable()}</div>;\r\n};\r\n\r\nexport default GammaStatistics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}