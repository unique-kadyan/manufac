{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\Documents\\\\Assignment\\\\assignment\\\\src\\\\components\\\\GammaStatistics.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateGamma = dataPoint => {\n  const {\n    Ash,\n    Hue,\n    Magnesium\n  } = dataPoint;\n  return Ash * Hue / Magnesium;\n};\nconst calculateClassWiseStats = dataset => {\n  const classWiseStats = {};\n  dataset.forEach(dataPoint => {\n    const {\n      Alcohol\n    } = dataPoint;\n    const gamma = calculateGamma(dataPoint);\n    if (!classWiseStats[Alcohol]) {\n      classWiseStats[Alcohol] = [];\n    }\n    classWiseStats[Alcohol].push(gamma);\n  });\n  Object.keys(classWiseStats).forEach(alcohol => {\n    const gammas = classWiseStats[alcohol];\n    const mean = gammas.reduce((sum, gamma) => sum + gamma, 0) / gammas.length;\n    const sortedGammas = gammas.sort((a, b) => a - b);\n    const median = sortedGammas[Math.floor(sortedGammas.length / 2)];\n    const mode = calculateMode(gammas);\n    classWiseStats[alcohol] = {\n      mean: mean.toFixed(3),\n      median: median.toFixed(3),\n      mode: mode.toFixed(3)\n    };\n  });\n  return classWiseStats;\n};\nconst calculateMode = arr => {\n  const frequencyMap = {};\n  let maxFrequency = 0;\n  let mode = null;\n  arr.forEach(value => {\n    frequencyMap[value] = frequencyMap[value] ? frequencyMap[value] + 1 : 1;\n    if (frequencyMap[value] > maxFrequency) {\n      maxFrequency = frequencyMap[value];\n      mode = value;\n    }\n  });\n  return mode;\n};\nconst GammaStatistics = _ref => {\n  let {\n    dataset\n  } = _ref;\n  const classWiseStats = calculateClassWiseStats(dataset);\n  const renderTable = () => {\n    const alcoholClasses = Object.keys(classWiseStats);\n    const measureList = ['Gamma Mean', 'Gamma Median', ' Gamma Mode'];\n    const rows = measureList.map(measure => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: measure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), alcoholClasses.map(alcohol => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: classWiseStats[alcohol][measure.toLowerCase()]\n      }, alcohol, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, measure, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Measure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), alcoholClasses.map(alcohol => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Class \", alcohol]\n          }, alcohol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTable()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_c = GammaStatistics;\nexport default GammaStatistics;\nvar _c;\n$RefreshReg$(_c, \"GammaStatistics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","calculateGamma","dataPoint","Ash","Hue","Magnesium","calculateClassWiseStats","dataset","classWiseStats","forEach","Alcohol","gamma","push","Object","keys","alcohol","gammas","mean","reduce","sum","length","sortedGammas","sort","a","b","median","Math","floor","mode","calculateMode","toFixed","arr","frequencyMap","maxFrequency","value","GammaStatistics","_ref","renderTable","alcoholClasses","measureList","rows","map","measure","children","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/rajes/Documents/Assignment/assignment/src/components/GammaStatistics.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst calculateGamma = (dataPoint) => {\r\n  const { Ash, Hue, Magnesium } = dataPoint;\r\n  return (Ash * Hue) / Magnesium;\r\n};\r\n\r\nconst calculateClassWiseStats = (dataset) => {\r\n  const classWiseStats = {};\r\n\r\n  dataset.forEach((dataPoint) => {\r\n    const { Alcohol } = dataPoint;\r\n    const gamma = calculateGamma(dataPoint);\r\n\r\n    if (!classWiseStats[Alcohol]) {\r\n      classWiseStats[Alcohol] = [];\r\n    }\r\n    classWiseStats[Alcohol].push(gamma);\r\n  });\r\n\r\n  Object.keys(classWiseStats).forEach((alcohol) => {\r\n    const gammas = classWiseStats[alcohol];\r\n\r\n    const mean = gammas.reduce((sum, gamma) => sum + gamma, 0) / gammas.length;\r\n\r\n    const sortedGammas = gammas.sort((a, b) => a - b);\r\n    const median = sortedGammas[Math.floor(sortedGammas.length / 2)];\r\n\r\n    const mode = calculateMode(gammas);\r\n\r\n    classWiseStats[alcohol] = {\r\n      mean: mean.toFixed(3),\r\n      median: median.toFixed(3),\r\n      mode: mode.toFixed(3),\r\n    };\r\n  });\r\n\r\n  return classWiseStats;\r\n};\r\n\r\nconst calculateMode = (arr) => {\r\n  const frequencyMap = {};\r\n  let maxFrequency = 0;\r\n  let mode = null;\r\n\r\n  arr.forEach((value) => {\r\n    frequencyMap[value] = frequencyMap[value] ? frequencyMap[value] + 1 : 1;\r\n    if (frequencyMap[value] > maxFrequency) {\r\n      maxFrequency = frequencyMap[value];\r\n      mode = value;\r\n    }\r\n  });\r\n\r\n  return mode;\r\n};\r\n\r\nconst GammaStatistics = ({ dataset }) => {\r\n  const classWiseStats = calculateClassWiseStats(dataset);\r\n\r\n  const renderTable = () => {\r\n    const alcoholClasses = Object.keys(classWiseStats);\r\n    const measureList = [ 'Gamma Mean', 'Gamma Median', ' Gamma Mode'];\r\n\r\n    const rows = measureList.map((measure) => (\r\n      <tr key={measure}>\r\n        <td>{measure}</td>\r\n        {alcoholClasses.map((alcohol) => (\r\n          <td key={alcohol}>{classWiseStats[alcohol][measure.toLowerCase()]}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Measure</th>\r\n            {alcoholClasses.map((alcohol) => (\r\n              <th key={alcohol}>Class {alcohol}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return <div>{renderTable()}</div>;\r\n};\r\n\r\nexport default GammaStatistics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}