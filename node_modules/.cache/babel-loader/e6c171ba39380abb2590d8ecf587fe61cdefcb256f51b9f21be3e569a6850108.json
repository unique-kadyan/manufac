{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajes\\\\Documents\\\\Assignment\\\\assignment\\\\src\\\\components\\\\DatasetStats.jsx\";\nimport React from \"react\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateMean(data, className) {\n  const filteredData = data.filter(item => item.Alcohol === className);\n  const sum = filteredData.reduce((total, item) => total + item.Flavanoids, 0);\n  console.log((sum / filteredData.length).toFixed(3));\n  return (sum / filteredData.length).toFixed(3);\n}\nfunction calculateMedian(data, className) {\n  const filteredData = data.filter(item => item.Alcohol === className).map(item => item.Flavanoids).sort();\n  const length = filteredData.length;\n  const middleIndex = Math.floor(length / 2);\n  if (length % 2 === 0) {\n    return ((filteredData[middleIndex - 1] + filteredData[middleIndex]) / 2).toFixed(3);\n  } else {\n    return filteredData[middleIndex].toFixed(3);\n  }\n}\nfunction calculateMode(data, className) {\n  const filteredData = data.filter(item => item.Alcohol === className);\n  const counts = {};\n  let maxCount = 0;\n  let mode = null;\n  filteredData.forEach(item => {\n    if (counts[item.Flavanoids]) {\n      counts[item.Flavanoids]++;\n    } else {\n      counts[item.Flavanoids] = 1;\n    }\n    if (counts[item.Flavanoids] > maxCount) {\n      maxCount = counts[item.Flavanoids];\n      mode = item.Flavanoids;\n    }\n  });\n  return mode.toFixed(3);\n}\nfunction ClassWiseStatistics() {\n  const uniqueClasses = [...new Set(data.map(item => item.Alcohol))];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Mean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Median\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: uniqueClasses.map(className => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: className\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calculateMean(data, className)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calculateMedian(data, className)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: calculateMode(data, className)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, className, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = ClassWiseStatistics;\nexport default ClassWiseStatistics;\nvar _c;\n$RefreshReg$(_c, \"ClassWiseStatistics\");","map":{"version":3,"names":["React","data","jsxDEV","_jsxDEV","calculateMean","className","filteredData","filter","item","Alcohol","sum","reduce","total","Flavanoids","console","log","length","toFixed","calculateMedian","map","sort","middleIndex","Math","floor","calculateMode","counts","maxCount","mode","forEach","ClassWiseStatistics","uniqueClasses","Set","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rajes/Documents/Assignment/assignment/src/components/DatasetStats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport data from \"./data.json\";\r\n\r\nfunction calculateMean(data, className) {\r\n  const filteredData = data.filter((item) => item.Alcohol === className);\r\n  const sum = filteredData.reduce((total, item) => total + item.Flavanoids, 0);\r\n  console.log((sum / filteredData.length).toFixed(3));\r\n  return (sum / filteredData.length).toFixed(3);\r\n}\r\n\r\nfunction calculateMedian(data, className) {\r\n  const filteredData = data\r\n    .filter((item) => item.Alcohol === className)\r\n    .map((item) => item.Flavanoids)\r\n    .sort();\r\n  const length = filteredData.length;\r\n  const middleIndex = Math.floor(length / 2);\r\n\r\n  if (length % 2 === 0) {\r\n    return ((filteredData[middleIndex - 1] + filteredData[middleIndex]) / 2).toFixed(3);\r\n  } else {\r\n    return (filteredData[middleIndex]).toFixed(3);\r\n  }\r\n}\r\n\r\nfunction calculateMode(data, className) {\r\n  const filteredData = data.filter((item) => item.Alcohol === className);\r\n  const counts = {};\r\n  let maxCount = 0;\r\n  let mode = null;\r\n\r\n  filteredData.forEach((item) => {\r\n    if (counts[item.Flavanoids]) {\r\n      counts[item.Flavanoids]++;\r\n    } else {\r\n      counts[item.Flavanoids] = 1;\r\n    }\r\n\r\n    if (counts[item.Flavanoids] > maxCount) {\r\n      maxCount = counts[item.Flavanoids];\r\n      mode = item.Flavanoids;\r\n    }\r\n  });\r\n\r\n  return mode.toFixed(3);\r\n}\r\n\r\nfunction ClassWiseStatistics() {\r\n  const uniqueClasses = [...new Set(data.map((item) => item.Alcohol))];\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Class</th>\r\n          <th>Mean</th>\r\n          <th>Median</th>\r\n          <th>Mode</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {uniqueClasses.map((className) => (\r\n          <tr key={className}>\r\n            <td>{className}</td>\r\n            <td>{calculateMean(data, className)}</td>\r\n            <td>{calculateMedian(data, className)}</td>\r\n            <td>{calculateMode(data, className)}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default ClassWiseStatistics;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,aAAaA,CAACH,IAAI,EAAEI,SAAS,EAAE;EACtC,MAAMC,YAAY,GAAGL,IAAI,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKJ,SAAS,CAAC;EACtE,MAAMK,GAAG,GAAGJ,YAAY,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEJ,IAAI,KAAKI,KAAK,GAAGJ,IAAI,CAACK,UAAU,EAAE,CAAC,CAAC;EAC5EC,OAAO,CAACC,GAAG,CAAC,CAACL,GAAG,GAAGJ,YAAY,CAACU,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,OAAO,CAACP,GAAG,GAAGJ,YAAY,CAACU,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC;AAC/C;AAEA,SAASC,eAAeA,CAACjB,IAAI,EAAEI,SAAS,EAAE;EACxC,MAAMC,YAAY,GAAGL,IAAI,CACtBM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKJ,SAAS,CAAC,CAC5Cc,GAAG,CAAEX,IAAI,IAAKA,IAAI,CAACK,UAAU,CAAC,CAC9BO,IAAI,CAAC,CAAC;EACT,MAAMJ,MAAM,GAAGV,YAAY,CAACU,MAAM;EAClC,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,GAAG,CAAC,CAAC;EAE1C,IAAIA,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACpB,OAAO,CAAC,CAACV,YAAY,CAACe,WAAW,GAAG,CAAC,CAAC,GAAGf,YAAY,CAACe,WAAW,CAAC,IAAI,CAAC,EAAEJ,OAAO,CAAC,CAAC,CAAC;EACrF,CAAC,MAAM;IACL,OAAQX,YAAY,CAACe,WAAW,CAAC,CAAEJ,OAAO,CAAC,CAAC,CAAC;EAC/C;AACF;AAEA,SAASO,aAAaA,CAACvB,IAAI,EAAEI,SAAS,EAAE;EACtC,MAAMC,YAAY,GAAGL,IAAI,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKJ,SAAS,CAAC;EACtE,MAAMoB,MAAM,GAAG,CAAC,CAAC;EACjB,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,IAAI,GAAG,IAAI;EAEfrB,YAAY,CAACsB,OAAO,CAAEpB,IAAI,IAAK;IAC7B,IAAIiB,MAAM,CAACjB,IAAI,CAACK,UAAU,CAAC,EAAE;MAC3BY,MAAM,CAACjB,IAAI,CAACK,UAAU,CAAC,EAAE;IAC3B,CAAC,MAAM;MACLY,MAAM,CAACjB,IAAI,CAACK,UAAU,CAAC,GAAG,CAAC;IAC7B;IAEA,IAAIY,MAAM,CAACjB,IAAI,CAACK,UAAU,CAAC,GAAGa,QAAQ,EAAE;MACtCA,QAAQ,GAAGD,MAAM,CAACjB,IAAI,CAACK,UAAU,CAAC;MAClCc,IAAI,GAAGnB,IAAI,CAACK,UAAU;IACxB;EACF,CAAC,CAAC;EAEF,OAAOc,IAAI,CAACV,OAAO,CAAC,CAAC,CAAC;AACxB;AAEA,SAASY,mBAAmBA,CAAA,EAAG;EAC7B,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC9B,IAAI,CAACkB,GAAG,CAAEX,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;EAEpE,oBACEN,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAA6B,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdjC,OAAA;UAAA6B,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbjC,OAAA;UAAA6B,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfjC,OAAA;UAAA6B,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRjC,OAAA;MAAA6B,QAAA,EACGF,aAAa,CAACX,GAAG,CAAEd,SAAS,iBAC3BF,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAA6B,QAAA,EAAK3B;QAAS;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBjC,OAAA;UAAA6B,QAAA,EAAK5B,aAAa,CAACH,IAAI,EAAEI,SAAS;QAAC;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzCjC,OAAA;UAAA6B,QAAA,EAAKd,eAAe,CAACjB,IAAI,EAAEI,SAAS;QAAC;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3CjC,OAAA;UAAA6B,QAAA,EAAKR,aAAa,CAACvB,IAAI,EAAEI,SAAS;QAAC;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJlC/B,SAAS;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACC,EAAA,GAzBQR,mBAAmB;AA2B5B,eAAeA,mBAAmB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}